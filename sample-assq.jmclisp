(def mkassoc
  '(lambda (a b)
     (cond ((or (null a) (null b)) nil)
           (t (cons (cons (car a) (car b))
                    (mkassoc (cdr a) (cdr b))))))) 

(def vs (mkassoc '(hoge hage hige) '(10 20 30)))

(def assq
  '(lambda (k vs)
     (cond ((eq vs '()) nil)
           ((eq (car (car vs)) k)
            (car vs))
           (t (assq k (cdr vs))))))

(assq 'hage vs)

(car (assq 'hage vs))

(cdr (assq 'hage vs))

exit

