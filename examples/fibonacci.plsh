(def append
  (lambda (a b)
     (cond ((eq a nil) b)
           (t (cons (car a) (append (cdr a) b))))))

(def fib
  (lambda (n)
     (cond ((eq n '()) '())
           ((eq (cdr n) '()) '(0))
           (t (append (fib (cdr n))
                      (fib (cdr (cdr n))))))))

(def 10 '(0 0 0 0 0 0 0 0 0 0))

(length (fib 10))

exit

