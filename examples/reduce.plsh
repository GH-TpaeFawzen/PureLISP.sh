(def reduce
  (lambda (f L i)
     (cond ((eq L nil) i)
           (t (f (car L) (reduce f (cdr L) i))))))

(def list1 '(a b c))

(def list2 '(d e f g))

(reduce cons list1 list2)

(def rappend (lambda (x y) (reduce cons x y)))

(def list3 '((a b) (c d e) (f) (g h i)))

(reduce rappend list3 nil)

exit

